import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {useEffect, useState} from 'react'
import * as signalR from '@microsoft/signalr'
import {useRouter} from "next/router";
import { Message} from "../lib/api";
import ConnectionState from "../components/ConnectionState";
import {useHub} from "../lib/useHub";
import {HubConnection} from "@microsoft/signalr";
import {useClientMethod} from "../lib/useClientMethod";
import {useHubMethod} from "../lib/useHubMethod";
import ScreenSelector from "../components/ScreenSelector";



export default function Home() {
    const [connection, setConnection] = useState<HubConnection>(null);
    const [messages, setMessages] = useState<Message[]>([])
    const [display, setDisplay] = useState("1")
    const router = useRouter()


    useEffect(() => {
        const conn = new signalR.HubConnectionBuilder()
            .withUrl(`http://localhost:3001/chatHub`)
            // .withAutomaticReconnect()
            .build();
        setConnection(conn)
    }, [])


    const { hubConnectionState, error } = useHub(connection)
    useClientMethod(connection, 'Navigate', (url) => {
        router.push(url)
    });
    useClientMethod(connection, 'ReceiveMessage', (user, message) => {
        let msg = { user, message }
        console.log('m', msg)
        console.log('ms', messages)
        setMessages([...messages, msg])
        console.log('hi', user, message)
    })
    const { invoke, loading, error: e } = useHubMethod(connection, "SendMessage");
    const { invoke: joinRoom } = useHubMethod(connection, 'JoinScreen')

    const sendMessage = (evt: any) => {
        invoke({
            screenId: display,
            user: 'bob',
            message: 'wave'
        });
    }

    const onDisplayChange = (id: string) => {
        setDisplay(id)
        joinRoom(id)
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <div>
                <ConnectionState state={hubConnectionState} />

                    <ScreenSelector display={display} onChange={onDisplayChange} />

                <ul>
                    {messages.map((m, i) => {
                        return <li key={i}>{m.user}: {m.message}</li>
                    })}
                </ul>

                <button onClick={sendMessage}>MSG</button>
            </div>
        </div>
    )
}
