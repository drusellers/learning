/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

ext {
    versions = [
            'dropwizard': '2.0.14',
    ]
}

// Java 11 Please
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Dropwizard provides tools to help boot the application and receive requests...
    implementation "io.dropwizard:dropwizard-core:${versions.dropwizard}"
    implementation "io.dropwizard:dropwizard-auth:${versions.dropwizard}"

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'dippy.App'
}

def configFile = "config/development.yml"

run {
    applicationDefaultJvmArgs = [
            '-server',
            '-Xverify:none',
            '-Xms2g',
            '-Xmx2g',
            '-XX:+UseG1GC',
            '-XX:G1HeapRegionSize=8m',
            '-XX:+PerfDisableSharedMem',
            '-XX:+ParallelRefProcEnabled',
    ]

    args = ["server", configFile]
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

task lifer (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "dippy.App"
    args = ['lifer', configFile]
}
