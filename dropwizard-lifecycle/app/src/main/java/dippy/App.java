/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dippy;

import io.dropwizard.Application;
import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.ServiceLoader;

public class App extends Application<DippyConfiguration> {
    private static final Logger log = LoggerFactory.getLogger(App.class);

    public static void main(String[] args) throws Exception {
        new App().run(args);
    }

    // Ok, no logging is available in initialize!
    @Override
    public void initialize(Bootstrap<DippyConfiguration> bootstrap) {
        log.info(" APP.INIT");
        System.out.println(" APP.INIT");

        // ServiceLoader since Java 6
        var services = ServiceLoader.load(Service.class);
        for(Service s : services) {
            log.info("!!!! {}", s.wat());
            System.out.println("!!! " + s.wat());
        }

        bootstrap.addBundle(new SampleBundle());
        bootstrap.addCommand(new SampleCommand(this));

        System.out.println("/APP.INIT");
        log.info("/APP.INIT");
    }

    @Override
    public void run(DippyConfiguration configuration, Environment environment) throws Exception {
        System.out.println(" APP.RUN");
        log.info(" APP.RUN");

        environment.lifecycle().manage(new Burpy("One"));
        environment.lifecycle().manage(new Burpy("Two"));

        log.info("/APP.RUN");
        System.out.println("/APP.RUN");
    }
}
